<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<% String contextPath = request.getContextPath(); // база сайта - домашнее ссылка %>
<h1>Url</h1>

<pre style="display: block">
             <span style="color:rgb(0, 76, 178)">userinfo</span>       <span style="color:rgb(0, 177, 17)">host</span>      <span style="color:rgb(178, 111, 0)">port</span>
            <span style="color:rgb(0, 76, 178)">┌──┴───┐</span> <span style="color:rgb(0, 177, 17)">┌──────┴──────┐</span> <span style="color:rgb(178, 111, 0)">┌┴┐</span>
    https://john.doe@www.example.com:123/forum/questions/?tag=networking&amp;order=newest#top
    <span style="color:rgb(178, 111, 0)">└─┬─┘</span>   <span style="color:rgb(176, 0, 177)">└─────────────┬────────────┘</span><span style="color:rgb(0, 76, 178)">└───────┬───────┘</span> <span style="color:rgb(0, 178, 17)">└────────────┬────────────┘</span> <span style="color:rgb(178, 111, 0)">└┬┘</span>
    <span style="color:rgb(178, 111, 0)">scheme</span>              <span style="color:rgb(176, 0, 177)">authority</span>             <span style="color:rgb(0, 76, 178)">path</span>                    <span style="color:rgb(0, 178, 17)">query</span>         <span style="color:rgb(178, 111, 0)">fragment</span>
</pre>
<img src="<%=contextPath%>/img/3ae69345e59b4fc48d344c20cc554d60.jpg"  alt="img">
<p><b>Scheme (схема)</b><br/>
    Каждый URI начинается с имени схемы, которое относится к спецификации для присвоения идентификаторов
    в этой схеме. Также, синтаксис URI — объединенная и расширяемая система именования,
    причем, спецификация каждой схемы может далее ограничить синтаксис и семантику идентификаторов, использующих эту схему.
    Название схемы обязательно начинается с буквы и далее может быть продолжено любым количеством разрешенных символов.</p>
<p><b>Authority</b><br>
    После схемы идет Authority компонент. Он указывает, какой сервер управляет ресурсом. Он включает в себя два элемента: хост и порт.
</p>
<p><b>Path (Путь)</b><br>
    Компонента пути содержит данные, обычно, организованные в иерархической форме,
    которые, вместе с данными в неиерархическом компоненте запроса (Query), служит,
    чтобы идентифицировать ресурс в рамках схемы URI и authority (если таковая компонента указана).
    Путь начинается со слеша(/) и заканчивается знаком вопроса(?), октоторпом(#) или концом URI
</p>
<p><b>Query</b>
    Компонента запроса содержит данные, организованные в неиерархической форме, которые, вместе с данными в иерархическом компоненте пути (Path), служит, чтобы идентифицировать ресурс в рамках схемы URI и authority (если таковая компонента указана).
    Запрос начинается с первого знака вопроса(?) и заканчивается октоторпом(#) или концом URI
</p>
<p><b>Fragment (Фрагмент)
</b>
    Компонента фрагмент позволяет осуществить косвенную идентификацию вторичного ресурса по отношению к первому.
    Семантика фрагмента никак не ограничена, фрагмент начинается октоторпом(#) и заканчивается концом URI, при этом может состоять из абсолютно любого набора символов.
    Примером применения фрагментов является оглавление данной статьи. Оно состоит из относительных ссылок

</p>
<p>
    &lt;a href="#someanchor"&gt; &lt;/a&gt;
</p>
<p>
    Переходя по указанной в оглавлении ссылке, браузер производит переход ко вторичному ресурсу относительно данной страницы,
    т.е. скроллит вниз, до появления нужного
</p>
<p>
    &lt;anchor&gt;
    а экране.
</p>